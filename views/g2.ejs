<!DOCTYPE html>
<html lang="en">
  <%- include('layouts/header'); -%>
  <body>
    <!-- Navigation -->
    <%- include('layouts/navbar'); -%>
    <!-- Page Header -->
    <header class="masthead" style="background-image: url('assets/img/G2.jpg')">
      <div class="container position-relative px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
          <div class="col-md-10 col-lg-8 col-xl-7">
            <div class="page-heading">
              <h1>G2 License</h1>
              <span class="subheading">Fill up or View</span>
            </div>
          </div>
        </div>
      </div>
    </header>
    <!-- Main Content -->
    <main class="mb-4">
      <div class="container px-4 px-lg-5">
        
        <% if (user && (user.licenseNo == "" || user.licenseNo == "default")) { %>
        <div class="row gx-4 gx-lg-5 justify-content-center">
          <div class="col-md-10 col-lg-8 col-xl-7">
            <form id="contactForm" method="post" action="/g2/details">
              <div class="form-floating">
                <input
                  class="form-control"
                  id="fname"
                  name="firstname"
                  type="text"
                  placeholder="Enter your First name..."
                  data-sb-validations="required"
                />
                <label for="fname">First Name</label>
                <div class="invalid-feedback" data-sb-feedback="fname:required">
                  First name is required.
                </div>
              </div>
              <div class="form-floating">
                <input
                  class="form-control"
                  id="lname"
                  name="lastname"
                  type="text"
                  placeholder="Enter your Last name..."
                  data-sb-validations="required"
                />
                <label for="lname">Last Name</label>
                <div class="invalid-feedback" data-sb-feedback="lname:required">
                  Last name is required.
                </div>
              </div>
              <div class="form-floating">
                <input
                  class="form-control"
                  id="lnumber"
                  name="licenseNo"
                  type="text"
                  pattern="[a-zA-Z0-9]{8}"
                  minlength="8"
                  maxlength="8"
                  placeholder="Enter your License number..."
                  data-sb-validations="required"
                />
                <label for="lnumber">License Number</label>
                <div
                  class="invalid-feedback"
                  data-sb-feedback="lnumber:required"
                >
                  License number is required.
                </div>
              </div>
              <div class="form-floating">
                <input
                  class="form-control"
                  id="age"
                  type="number"
                  name="age"
                  placeholder="Enter your Age..."
                  data-sb-validations="required"
                />
                <label for="age">Age</label>
                <div class="invalid-feedback" data-sb-feedback="age:required">
                  Age is required.
                </div>
              </div>
              <div class="form-floating">
                <input
                  class="form-control"
                  id="dob"
                  type="date"
                  placeholder="Enter your Date of Birth..."
                  data-sb-validations="required"
                />
                <label for="dob">Date of Birth</label>
                <div class="invalid-feedback" data-sb-feedback="dob:required">
                  Date of Birth is required.
                </div>
              </div>
              <br />
              <h1>Car Details</h1>
              <div class="form-floating">
                <input
                  class="form-control"
                  id="make"
                  type="text"
                  name="make"
                  placeholder="Enter Car's Brand..."
                  data-sb-validations="required"
                />
                <label for="make">Make</label>
                <div class="invalid-feedback" data-sb-feedback="make:required">
                  Brand is required.
                </div>
              </div>
              <div class="form-floating">
                <input
                  class="form-control"
                  id="model"
                  type="text"
                  name="model"
                  placeholder="Enter Car's Model..."
                  data-sb-validations="required"
                />
                <label for="model">Model</label>
                <div class="invalid-feedback" data-sb-feedback="model:required">
                  Model is required.
                </div>
              </div>
              <div class="form-floating">
                <input
                  class="form-control"
                  id="year"
                  type="number"
                  name="year"
                  placeholder="Enter Car's model year..."
                  data-sb-validations="required"
                />
                <label for="year">Year</label>
                <div class="invalid-feedback" data-sb-feedback="year:required">
                  Year is required.
                </div>
              </div>
              <div class="form-floating">
                <input
                  class="form-control"
                  id="pnumber"
                  type="text"
                  name="plateNumber"
                  pattern="[a-zA-Z0-9]+"
                  placeholder="Enter Plate number..."
                  data-sb-validations="required"
                />
                <label for="pnumber">Plate Number</label>
                <div
                  class="invalid-feedback"
                  data-sb-feedback="pnumber:required"
                >
                  Plate Number is required.
                </div>
              </div>
              <br />
              <div class="d-none" id="submitSuccessMessage">
                <div class="text-center mb-3">
                  <div class="fw-bolder">Form submission successful!</div>
                  To activate this form, sign up at
                  <br />
                </div>
              </div>
              <div class="d-none" id="submitErrorMessage">
                <div class="text-center text-danger mb-3">
                  Please enter correct information!
                </div>
              </div>
              <!-- Submit Button-->
              <button
                class="btn btn-primary text-uppercase"
                id="submitButton"
                type="submit"
              >
                Submit
              </button>
            </form>
          </div>
        </div>
        <% } else if (user && user.appointments && timeSlot != null ) { %>
          <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
              <!-- User Information and Form -->
              <h2>Your Appointment</h2>
              <p>Date: <%= user.appointments.date %></p>
              <p>Time: <%= timeSlot.time %></p>
              <p>Status: Booked</p>
            </div>
          </div>
          <% if (user && user.status !== null) { %>
            <div class="row gx-4 gx-lg-5 justify-content-center">
              <div class="col-md-10 col-lg-8 col-xl-7">
                <h2>Examination Status</h2>
                <p><strong>Status:</strong> <%= user.status ? 'Pass' : 'Fail' %></p>
                <p><strong>Comments:</strong> <%= user.comments || 'No comments provided' %></p>
              </div>
            </div>
        <% } %>
        <% } else { %>
        <div class="row gx-4 gx-lg-5 justify-content-center mt-4">
          <div class="col-md-10 col-lg-8 col-xl-7">
            <h2>Book an Appointment</h2>
            <form
              id="appointment-form"
              method="POST"
              action="/book-appointment"
            >
              <div class="form-group">
                <label for="appointmentDate">Date:</label>
                <input
                  type="date"
                  class="form-control"
                  id="appointmentDate"
                  name="appointmentDate"
                  required
                />
              </div>
              <br />
              <div class="form-group">
                <label for="timeSlots">Available Time Slots:</label>
                <div id="timeSlots">
                  <!-- Time slot buttons will be dynamically generated here -->
                </div>
              </div>
              <br />
              <input
                type="hidden"
                id="selectedTimeSlots"
                name="selectedTimeSlots"
              />
              <input type="hidden" id="appointmentId" name="appointmentId" />
              <!-- Hidden input for appointment ID -->
              <button type="submit" class="btn btn-success">
                Book Appointment
              </button>
            </form>
          </div>
        </div>
        <% } %>
      </div>
    </main>
    <!-- Footer -->
    <%- include('layouts/footer'); -%>
    <!-- Scripts -->
    <%- include('layouts/scripts'); -%>
    <!-- Custom Script to Handle Button Clicks -->
    <!--... -->
    <!--... -->
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const datePicker = document.getElementById("appointmentDate");
        const timeSlotsDiv = document.getElementById("timeSlots");
        const selectedTimeSlotsInput =
          document.getElementById("selectedTimeSlots");
        const appointmentIdInput = document.getElementById("appointmentId");

        let currentAppointmentId = null;
        let previouslySelectedButton = null; // Track previously selected button
        const selectedSlotsByDate = {};

        datePicker.addEventListener("change", async () => {
          const selectedDate = datePicker.value;
          if (selectedDate) {
            await updateTimeSlots(selectedDate);
          }
        });

        async function updateTimeSlots(date) {
          try {
            const response = await fetch(
              `/api/available-time-slots?date=${date}`
            );
            const data = await response.json();

            console.log(data);

            timeSlotsDiv.innerHTML = ""; // Clear existing slots

            if (data.timeSlots && data.timeSlots.length > 0) {
              data.timeSlots.forEach((slot) => {
                const button = document.createElement("button");
                button.type = "button";
                button.className = "btn btn-primary time-slot-btn";
                button.setAttribute("data-time", slot.time);
                button.setAttribute(
                  "data-appointment-id",
                  currentAppointmentId
                ); // Set appointment ID
                button.textContent = slot.time;

                button.addEventListener("click", () => {
                  if (previouslySelectedButton) {
                    previouslySelectedButton.classList.remove("selected");
                    previouslySelectedButton.disabled = false; // Re-enable previously selected button
                  }

                  if (button.classList.contains("selected")) {
                    // If the same button is clicked again, unselect it
                    button.classList.remove("selected");
                    button.disabled = false; // Re-enable the button
                    selectedSlotsByDate[date] = [];
                  } else {
                    // Select the new button
                    button.classList.add("selected");
                    button.disabled = true;
                    if (!selectedSlotsByDate[date]) {
                      selectedSlotsByDate[date] = [];
                    }
                    selectedSlotsByDate[date] = [slot.time];
                  }

                  previouslySelectedButton = button; // Update the previously selected button
                  updateSelectedTimeSlots();
                });

                timeSlotsDiv.appendChild(button);
              });
            } else {
              timeSlotsDiv.innerHTML =
                "<p>No available time slots for this date.</p>";
            }
          } catch (error) {
            console.error("Error fetching available time slots:", error);
            timeSlotsDiv.innerHTML =
              "<p>Error fetching available time slots.</p>";
          }
        }

        function updateSelectedTimeSlots() {
          console.log(selectedSlotsByDate);
          selectedTimeSlotsInput.value = JSON.stringify(selectedSlotsByDate);
        }

        // Set appointment ID when a date is selected
        datePicker.addEventListener("change", async () => {
          const selectedDate = datePicker.value;
          if (selectedDate) {
            const response = await fetch(
              `/api/available-time-slots?date=${selectedDate}`
            );
            const data = await response.json();
            console.log("data_appointment_id");
            if (data.appointmentId) {
              currentAppointmentId = data.appointmentId;
              appointmentIdInput.value = currentAppointmentId; // Set the appointment ID in the hidden input
            }
          }
        });
      });
    </script>
  </body>
</html>
